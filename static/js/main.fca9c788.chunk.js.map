{"version":3,"sources":["reportWebVitals.js","Playground/CoinDetails.js","Playground/CoinDetailsCombined.js","Playground/CoinTable.js","Playground/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CoinDetails","props","row","profitLoss","quantity","liveprice","investedamount","difference","parseFloat","baseIcon","abbr","toLowerCase","src","className","coinname","orderprice","toFixed","CoinDetailsCombined","currentamount","Sum","total","arr","forEach","x","CoinTable","coins","showComb","coinComb","reduce","res","value","push","sort","a","b","totalInvestedAmount","map","coin","totalWalletAmount","id","onClick","toggleTab","onRefresh","coinc","index","Main","state","refresh","bind","this","setState","fetch","json","result","symbol","price","setTimeout","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fca9c788.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import React, {Component} from 'react';\r\nimport React from 'react'\r\n\r\n//class CoinDetails extends Component{\r\n    //row.abbr.toLowerCase()\r\n\r\n    //render(){\r\nconst CoinDetails = (props) => {\r\n    const row = props.row;\r\n    const profitLoss = ((((row.quantity) * (row.liveprice)) - (row.investedamount))/ (row.investedamount)) * 100;\r\n    const difference = ((row.quantity) * (row.liveprice)) - (row.investedamount)\r\n    const liveprice = parseFloat(row.liveprice);\r\n    const baseIcon =    `https://api.coinicons.net/icon/${row.abbr.toLowerCase()}/32x32`;\r\n    \r\n    return(\r\n        <tr>\r\n            <td>\r\n                <img src={baseIcon} className=\"icon\" /> \r\n                <div className=\"flex-column\">\r\n                <span><strong>{row.abbr}</strong>  <p className=\"p-curr p-coin\"> / USD</p></span>\r\n                <p className=\"p-coin\">{row.coinname}</p>\r\n                </div>\r\n            </td>\r\n            {/* <td>{row.symbol}</td> */}\r\n            <td>{row.quantity}</td>\r\n            <td>{row.orderprice}</td>\r\n            <td>${parseFloat(row.investedamount).toFixed(2)}</td>\r\n            <td>${((row.quantity) * (row.liveprice)).toFixed(5)}</td>\r\n            <td>\r\n                {profitLoss.toFixed(2)}%\r\n            </td>\r\n            <td>\r\n                ${difference.toFixed(2)}\r\n            </td>\r\n            <td>${liveprice.toFixed(7)}</td>\r\n        </tr>\r\n        \r\n    )\r\n    //}\r\n}\r\n\r\nexport default CoinDetails","// import React, {Component} from 'react';\r\nimport React from 'react'\r\n\r\n// class CoinDetailsCombined extends Component{\r\n    \r\n    // render(){\r\n\r\nconst CoinDetailsCombined = (props) => {\r\n    const row = props.row;\r\n    const profitLoss = (((row.currentamount) - (row.investedamount))/ (row.investedamount)) * 100;\r\n    const difference = ((row.currentamount)  - (row.investedamount))\r\n    const liveprice = parseFloat(row.liveprice);\r\n    const baseIcon =    `https://api.coinicons.net/icon/${row.abbr.toLowerCase()}/32x32`;\r\n\r\n    return(\r\n        <tr>\r\n            <td>\r\n                <img src={baseIcon} className=\"icon\" /> \r\n                <div className=\"flex-column-\">\r\n                <span><strong>{row.abbr}</strong>  <p className=\"p-curr p-coin\"> / USD</p></span>\r\n                <p className=\"p-coin\">{row.coinname}</p>\r\n                </div>\r\n            </td>\r\n            <td>{parseFloat(row.quantity).toFixed(5)}</td>\r\n            <td>${parseFloat(row.investedamount).toFixed(2)}</td>\r\n            <td>${parseFloat(row.currentamount).toFixed(2)}</td>\r\n            <td>\r\n                {profitLoss.toFixed(2)}%\r\n            </td>\r\n            <td>\r\n                ${difference.toFixed(2)}\r\n            </td>\r\n            <td><span>${liveprice.toFixed(7)}</span></td>\r\n        </tr>\r\n        \r\n    )\r\n}\r\n//}\r\n\r\nexport default CoinDetailsCombined","// import React, {Component} from 'react';\r\nimport React from 'react'\r\nimport CoinDetails from './CoinDetails';\r\nimport CoinDetailsCombined from './CoinDetailsCombined';\r\nimport '../Stylesheet/styles.css'\r\n\r\n//class CoinTable extends Component{\r\n\r\nconst Sum = (...arr) => {\r\n    var total = 0;\r\n    arr.forEach((x) => {\r\n        total += parseFloat(x)\r\n    })\r\n    return total.toFixed(2);\r\n};\r\n\r\nconst CoinTable = (props) => {\r\n    //render(){\r\n        const coins = props.coins;\r\n        const showComb = props.showComb\r\n        const coinComb = [];\r\n        coins.reduce((res,value) => {\r\n            if(!res[value.coinname]){\r\n                res[value.coinname] = {\r\n                    coinname : value.coinname,\r\n                    quantity : 0,\r\n                    investedamount : 0,\r\n                    currentamount : 0,\r\n                    liveprice : value.liveprice,\r\n                    abbr: value.abbr\r\n                }\r\n                coinComb.push(res[value.coinname])\r\n           }\r\n           res[value.coinname].quantity += value.quantity\r\n           res[value.coinname].investedamount += value.investedamount\r\n           res[value.coinname].currentamount += (value.quantity * value.liveprice)\r\n           return res;\r\n       }, {})    \r\n\r\n       coinComb.sort((a,b) =>{\r\n           return (((b.currentamount - b.investedamount)/b.investedamount) - (((a.currentamount - a.investedamount)/a.investedamount)))\r\n       })\r\n\r\n        const totalInvestedAmount = Sum(...(coins.map((coin) => (coin.investedamount))))\r\n        const totalWalletAmount = Sum(...(coins.map((coin) => (coin.quantity * coin.liveprice))))\r\n        const profitLoss = (((totalWalletAmount - totalInvestedAmount)/totalInvestedAmount)*100)\r\n        const difference = (totalWalletAmount - totalInvestedAmount)\r\n\r\n\r\n        return (\r\n            <div>\r\n                    <div id=\"divTotal\">\r\n                        <table className = \"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Total Investment Amount</th>\r\n                                    <th>Wallet Amount</th>\r\n                                    <th>Profit/Loss</th>\r\n                                    <th>Difference</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>${totalInvestedAmount}</td>\r\n                                    <td>${totalWalletAmount}</td>\r\n                                    <td>{profitLoss.toFixed(2)}%</td>\r\n                                    <td>${difference.toFixed(2)}</td>\r\n                                </tr>\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <button className=\"btn\" onClick= {() => {props.toggleTab()}}>Combined / Segregate</button>\r\n                            {/* <button className=\"btn\" onClick= {() => {this.props.toggleTab()}}>Segregate</button> */}\r\n                            <label className=\"screen-label\">{showComb === true ? 'Combined View' : 'Segregated View'}</label>\r\n                            <button className=\"btn refresh-btn\" onClick = {() => {props.onRefresh()}}>Refresh</button>    \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                    {showComb && <div id=\"divComb\">\r\n                    <table className = \"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Coin Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Amt Inv'd</th>\r\n                                <th>Current Value</th>\r\n                                <th>P/L</th>\r\n                                <th>Difference</th>\r\n                                <th>Live Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                coinComb.map((coinc, index) => <CoinDetailsCombined row =  {coinc} key = {index} />)\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    </div>}\r\n\r\n                    {!showComb && <div id=\"divSeg\">\r\n                    <table className = \"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Coin Name</th>\r\n                                {/* <th>Symbol</th> */}\r\n                                <th>Quantity</th>\r\n                                <th>Order Price</th>\r\n                                <th>Amt Inv'd</th>\r\n                                <th>Current Value</th>\r\n                                <th>P/L</th>\r\n                                <th>Difference</th>\r\n                                <th>Live Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                // coins.map((row, index) => <CoinDetails row =  {row} key = {index} />)\r\n                                coins.map((coin, index) => <CoinDetails row =  {coin} key = {index} />)\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    //}\r\n}\r\n\r\n\r\nexport default CoinTable\r\n","import React, {Component} from 'react';\r\n// import NewPrice from './NewPrice';\r\nimport CoinTable from './CoinTable';\r\nimport '../App.css';\r\nimport '../Stylesheet/styles.css'\r\n\r\n\r\nclass Main extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            coins: props.coins,\r\n            showComb: true\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.toggleTab = this.toggleTab.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    toggleTab(){\r\n        this.setState((state) => ({\r\n            showComb: !state.showComb\r\n        }))\r\n\r\n    }\r\n\r\n     refresh() {\r\n        fetch(\"https://api.binance.com/api/v3/ticker/price\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    coins: this.props.coins.map((coin) => (\r\n                        result.forEach((x) => {\r\n                            {if(coin.symbol === x.symbol){\r\n                                coin.liveprice = x.price\r\n                            }\r\n                            // else{\r\n                            //     return coin\r\n                            // }\r\n                            return coin\r\n                        }\r\n                        })\r\n                    ))\r\n                })\r\n                setTimeout(() => this.refresh(), 1000);\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            <CoinTable coins = {this.props.coins} showComb = {this.state.showComb}\r\n            onRefresh = {this.refresh} toggleTab = {this.toggleTab}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './Playground/Main';\n\nconst Coins = [\n  {\"coinname\": \"Bitcoin\", \"abbr\": \"BTC\", \"symbol\": \"BTCUSDT\", \"quantity\" : 0.001880, \"orderprice\" : 34300, \"investedamount\" : 65.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.02564, \"orderprice\" : 1950, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.04878, \"orderprice\" : 2050, \"investedamount\" : 100.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.02380, \"orderprice\" : 2100, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.0264, \"orderprice\" : 1920, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.0285, \"orderprice\" : 1750, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.01513, \"orderprice\" : 1750, \"investedamount\" : 35.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Etherum\", \"abbr\": \"ETH\", \"symbol\": \"ETHUSDT\",\"quantity\" : 0.0238, \"orderprice\" : 1750, \"investedamount\" : 65.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Cardano\", \"abbr\": \"ADA\", \"symbol\": \"ADAUSDT\",\"quantity\" : 40.65, \"orderprice\" : 1.23, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Cardano\", \"abbr\": \"ADA\", \"symbol\": \"ADAUSDT\",\"quantity\" : 23.27, \"orderprice\" : 1.48, \"investedamount\" : 35.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Cardano\", \"abbr\": \"ADA\", \"symbol\": \"ADAUSDT\",\"quantity\" : 9.5, \"orderprice\" : 1.37, \"investedamount\" : 13.50, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Cardano\", \"abbr\": \"ADA\", \"symbol\": \"ADAUSDT\",\"quantity\" : 16.6, \"orderprice\" : 1.61, \"investedamount\" : 27.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Polkadot\", \"abbr\": \"DOT\", \"symbol\": \"DOTUSDT\",\"quantity\" : 2.325, \"orderprice\" : 21.5, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Polkadot\", \"abbr\": \"DOT\", \"symbol\": \"DOTUSDT\",\"quantity\" : 1.612, \"orderprice\" : 18.6, \"investedamount\" : 30.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Polkadot\", \"abbr\": \"DOT\", \"symbol\": \"DOTUSDT\",\"quantity\" : 2.53, \"orderprice\" : 19.70, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Polkadot\", \"abbr\": \"DOT\", \"symbol\": \"DOTUSDT\",\"quantity\" : 2.94, \"orderprice\" : 17.00, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Chainlink\", \"abbr\": \"LINK\", \"symbol\": \"LINKUSDT\",\"quantity\" : 2.824, \"orderprice\" : 17.70, \"investedamount\" : 50.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Binance\", \"abbr\": \"BNB\", \"symbol\": \"BNBUSDT\",\"quantity\" : 0.567, \"orderprice\" : 308.53, \"investedamount\" : 175.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Ripple\", \"abbr\": \"XRP\", \"symbol\": \"XRPUSDT\",\"quantity\" : 36.9, \"orderprice\" : 0.95, \"investedamount\" : 35.00, \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Ripple\", \"abbr\": \"XRP\", \"symbol\": \"XRPUSDT\",\"quantity\" : 21.5, \"orderprice\" : 1.25, \"investedamount\" : 27.00 , \"liveprice\" : 0.00, \"up\" : false},\n  {\"coinname\": \"Shiba Inu\", \"abbr\": \"SHIB\", \"symbol\": \"SHIBUSDT\",\"quantity\" : 1126126, \"orderprice\" : .000012, \"investedamount\" : 13.50 , \"liveprice\" : 0.00, \"up\" : false}\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main coins={Coins}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}